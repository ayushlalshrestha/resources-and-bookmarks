
IAM Policies
- Definition of permission rules (json).
- Define `effects` (allow/deny) on `actions` that are performed on aws `resources` by different `principals`
- example of an Policy definition:
  ```
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": "s3:GetObject",
        "Resource": "arn:aws:s3:::example-bucket/*"
      }
    ]
  }
  ```

- When IAM determines permissions, an explicit Deny will always override any Allow statement.
- `Conditions` define the condition to apply the policy.
- AWS managed policies are provided & updated by AWS automatically.


IAM Roles:
- Set of permissions that can be attached to an AWS resource so that it can access other resources.
- Some AWS services will need to perform actions on your behalf.
- Trust policy of a `Role` defines which services can assume the `Role``.
- Trusted entities (In Roles) = Entities that can assume this role under specified conditions.
- Roles can only be passed to what their trust allows.

Question: What is a proper definition of IAM Roles?
An IAM entity that defines a set of permissions for making AWS service requests, that will be used by AWS services
Explanation: Some AWS service will need to perform actions on your behalf. To do so, you assign permissions to AWS services with IAM Roles.

Note: 
- Every resource has an arn.
- Maximum policy size is 2KB.
- IAM has database authentication capabilities that would allow an RDS database to only be accessed using the profile credentials specific to your EC2 instances.